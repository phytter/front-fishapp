[{"/home/phytter/Documents/Projects/front-fishapp/src/index.js":"1","/home/phytter/Documents/Projects/front-fishapp/src/App.js":"2","/home/phytter/Documents/Projects/front-fishapp/src/style.js":"3","/home/phytter/Documents/Projects/front-fishapp/src/globalStyle.js":"4","/home/phytter/Documents/Projects/front-fishapp/src/reportWebVitals.js":"5","/home/phytter/Documents/Projects/front-fishapp/src/routes.js":"6","/home/phytter/Documents/Projects/front-fishapp/src/information/index.js":"7","/home/phytter/Documents/Projects/front-fishapp/src/information/styles.js":"8","/home/phytter/Documents/Projects/front-fishapp/src/layout/index.js":"9","/home/phytter/Documents/Projects/front-fishapp/src/layout/styles.js":"10","/home/phytter/Documents/Projects/front-fishapp/src/about/index.js":"11","/home/phytter/Documents/Projects/front-fishapp/src/about/styles.js":"12"},{"size":729,"mtime":1618718724196,"results":"13","hashOfConfig":"14"},{"size":3257,"mtime":1618750527825,"results":"15","hashOfConfig":"14"},{"size":1491,"mtime":1618750912612,"results":"16","hashOfConfig":"14"},{"size":415,"mtime":1618746573068,"results":"17","hashOfConfig":"14"},{"size":362,"mtime":1612121614278,"results":"18","hashOfConfig":"14"},{"size":484,"mtime":1618753004663,"results":"19","hashOfConfig":"14"},{"size":962,"mtime":1618752737205,"results":"20","hashOfConfig":"14"},{"size":525,"mtime":1618752593096,"results":"21","hashOfConfig":"14"},{"size":409,"mtime":1618751157550,"results":"22","hashOfConfig":"14"},{"size":1283,"mtime":1618751154170,"results":"23","hashOfConfig":"14"},{"size":774,"mtime":1619299382136,"results":"24","hashOfConfig":"14"},{"size":779,"mtime":1618754144963,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"at3745",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/phytter/Documents/Projects/front-fishapp/src/index.js",["54"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './globalStyle'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport Route from './routes';\nimport Layout from './layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Layout>\n        <Route />\n      </Layout>\n      <GlobalStyle />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["55","56"],"/home/phytter/Documents/Projects/front-fishapp/src/App.js",["57"],"import { useState, useRef, useEffect } from 'react';\nimport ImageUploading from 'react-images-uploading';\nimport { Container, UploadWrapper, WrapperListImages, ImageItem, DropArea } from './style';\nimport axios from 'axios';\nimport { ImUpload } from 'react-icons/im';\nimport { Link } from 'react-router-dom';\n\naxios.defaults.baseURL = process.env.API_URL || 'http://localhost:8000';\n\nconst App = () => {\n  const imagesRef = useRef([]);\n  const [images, setImages] = useState([]);\n  const maxNumber = 50;\n\n\n  useEffect(() => {\n    imagesRef.current = images\n  }, [images]);\n\n  const onChange = (imageList, addUpdateIndex) => {\n\n    setImages(imageList);\n\n    setTimeout(() => {\n      addUpdateIndex?.map(async e => {\n        if (!imageList[e]?.predict)\n          return predict(imageList[e], e)\n      });\n    }, 10);\n  };\n\n  const predict = async (file, index) => {\n    const formData = new FormData();\n    formData.append('file', file.file);\n    await axios.post('/predict', formData)\n      .then(({ data }) => {\n        setImages(prev => {\n          const _list = [...imagesRef.current]\n          _list[index] = { ..._list[index], predict: data };\n          return _list;\n        })\n      });\n  }\n\n  const RenderList = ({ onImageRemove }) => {\n    return (\n      images.map((image, index) => (\n        <ImageItem key={index}>\n          <img src={image.data_url} alt=\"\" height=\"80\" />\n\n          <span>\n            {image?.file.name}\n          </span>\n          <span>\n            {image?.predict?.label ?? 'NÃ£o processado'}\n            {' - '}\n            {image?.predict?.score &&\n              (parseFloat(image?.predict?.score) * 100).toFixed(2)\n            } %\n          </span>\n\n          <div className=\"image-item__btn-wrapper\">\n            <button id=\"first-button\" onClick={() => predict(image, index)}>Processar</button>\n            <button onClick={() => onImageRemove(index)}>Remover</button>\n          </div>\n        </ImageItem>\n      ))\n    )\n  }\n\n  return (\n    <Container>\n      <ImageUploading\n        multiple\n        value={images}\n        onChange={onChange}\n        maxNumber={maxNumber}\n        dataURLKey=\"data_url\"\n      >\n        {({\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps\n        }) => (\n          <>\n            {\n              !!images.length && (\n                <>\n                  <UploadWrapper>\n                    <button className='btn' onClick={onImageRemoveAll}>Remover todas as imagens</button>\n                  </UploadWrapper>\n                  <WrapperListImages {...dragProps} drag={isDragging}>\n                    <RenderList onImageRemove={onImageRemove} />\n                  </WrapperListImages>\n                </>\n              )\n            }\n            {\n              !images.length && (\n                <DropArea {...dragProps} isDragging={isDragging} onClick={onImageUpload}>\n                  <ImUpload size={80} color=\"#707070\" />\n                  <span className=\"description\">Arraste imagens ou clique aqui</span>\n                </DropArea>\n              )\n            }\n          </>\n        )}\n      </ImageUploading>\n    </Container>\n  );\n}\n\nexport default App;\n","/home/phytter/Documents/Projects/front-fishapp/src/style.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/globalStyle.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/reportWebVitals.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/routes.js",["58"],"import { Switch, Route } from 'react-router-dom';\nimport Info from './information/index';\nimport About from './about/index';\nimport App from './App'\n\nexport default () => (\n    <Switch>\n        <Route exact path=\"/\">\n            <App />\n        </Route>\n        <Route exact path=\"/especies\">\n            <Info />\n        </Route>\n        <Route exact path=\"/sobre\">\n            <About />\n        </Route>\n        <Route path=\"*\">\n            <App />\n        </Route>\n    </Switch>\n);","/home/phytter/Documents/Projects/front-fishapp/src/information/index.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/information/styles.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/layout/index.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/layout/styles.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/about/index.js",[],"/home/phytter/Documents/Projects/front-fishapp/src/about/styles.js",[],{"ruleId":"59","severity":1,"message":"60","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":11},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":6,"column":10,"nodeType":"61","messageId":"62","endLine":6,"endColumn":14},{"ruleId":"68","severity":1,"message":"69","line":6,"column":1,"nodeType":"70","endLine":21,"endColumn":3},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]